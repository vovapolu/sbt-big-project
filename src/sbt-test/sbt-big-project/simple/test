# note that all "newer" checks need a 1 second pause before the action
# due to OS / filesystem limitations.

> breadcrumbsClear

# check internal computation
> a/dependentsExpect b c d e
> b/dependentsExpect c d e
> c/dependentsExpect d e
> d/dependentsExpect
> e/dependentsExpect

# compile d
> d/compile
> a/breadcrumbsExpect compile-update compile-compile compile-packageBin projectDescriptors
> b/breadcrumbsExpect compile-update compile-compile compile-packageBin projectDescriptors
> c/breadcrumbsExpect compile-update compile-compile compile-packageBin projectDescriptors
> d/breadcrumbsExpect compile-update compile-compile projectDescriptors
$ exists a/target/scala-2.10/a_2.10-v1.jar
$ exists b/target/scala-2.10/b_2.10-v1.jar
$ exists c/target/scala-2.10/c_2.10-v1.jar
$ absent d/target/scala-2.10/d_2.10-v1.jar
$ exists a/target/scala-2.10/last/a_2.10-v1.jar
$ exists b/target/scala-2.10/last/b_2.10-v1.jar
$ exists c/target/scala-2.10/last/c_2.10-v1.jar
$ absent d/target/scala-2.10/last/d_2.10-v1.jar
> breadcrumbsClear

# check that another d/compile doesn't invoke a/compile:compile, b/compile:compile or c/compile:compile
> d/compile
> a/breadcrumbsExpect
> b/breadcrumbsExpect
> c/breadcrumbsExpect
> d/breadcrumbsExpect compile-update compile-compile projectDescriptors
> breadcrumbsClear
> d/compile
> a/breadcrumbsExpect
> b/breadcrumbsExpect
> c/breadcrumbsExpect
> d/breadcrumbsExpect compile-update compile-compile projectDescriptors
> breadcrumbsClear

# after a reload, check that d/compile doesn't invoke
# a/compile:compile, etc (new session not possible with scripted)
> d/compile
> a/breadcrumbsExpect
> b/breadcrumbsExpect
> c/breadcrumbsExpect
> d/breadcrumbsExpect compile-update compile-compile projectDescriptors
> breadcrumbsClear
> d/compile
> a/breadcrumbsExpect
> b/breadcrumbsExpect
> c/breadcrumbsExpect
> d/breadcrumbsExpect compile-update compile-compile projectDescriptors
> breadcrumbsClear

# make a trivial change in b, a d/compile should not recompile
# (this is expected, but not ideal, and may be addressed)
$ touch timestamp
$ sleep 2000
$ touch b/main/src/scala/b/Foo.scala
$ sleep 2000
> d/compile
$ newer timestamp b/target/scala-2.10/b_2.10-v1.jar
> breadcrumbsClear

# delete b's jar, d/compile should recompile b's jar
$ delete b/target/scala-2.10/b_2.10-v1.jar
> d/compile
$ exists b/target/scala-2.10/b_2.10-v1.jar
> a/breadcrumbsExpect
> b/breadcrumbsExpect compile-update compile-compile projectDescriptors compile-packageBin
> c/breadcrumbsExpect compile-update projectDescriptors
> d/breadcrumbsExpect compile-compile compile-update projectDescriptors
$ exists a/target/scala-2.10/last/a_2.10-v1.jar
$ exists b/target/scala-2.10/last/b_2.10-v1.jar
$ exists c/target/scala-2.10/last/c_2.10-v1.jar
$ absent d/target/scala-2.10/last/d_2.10-v1.jar
> breadcrumbsClear

# delete b's classes, d/compile should not recompile b
$ delete b/target/scala-2.10/classes
> d/compile
> a/breadcrumbsExpect
> b/breadcrumbsExpect
> c/breadcrumbsExpect
> d/breadcrumbsExpect compile-update compile-compile projectDescriptors
> breadcrumbsClear

# b/compile recompiles b and delete's (only) its jar
$ touch timestamp
$ sleep 2000
> b/compile
> a/breadcrumbsExpect
> b/breadcrumbsExpect compile-update compile-compile projectDescriptors
> c/breadcrumbsExpect
> d/breadcrumbsExpect
> breadcrumbsClear
$ exists a/target/scala-2.10/a_2.10-v1.jar
$ newer timestamp a/target/scala-2.10/a_2.10-v1.jar
$ absent b/target/scala-2.10/b_2.10-v1.jar
$ exists c/target/scala-2.10/c_2.10-v1.jar
$ newer timestamp c/target/scala-2.10/c_2.10-v1.jar

# another b/compile attempts to recompile b
> b/compile
> a/breadcrumbsExpect
> b/breadcrumbsExpect compile-update compile-compile projectDescriptors
> c/breadcrumbsExpect
> d/breadcrumbsExpect
> breadcrumbsClear

# recompiling d again should (only) rebuild b's jars
$ touch timestamp
$ sleep 2000
> d/compile
> a/breadcrumbsExpect
> b/breadcrumbsExpect compile-update compile-compile compile-packageBin projectDescriptors
> c/breadcrumbsExpect compile-update projectDescriptors
> d/breadcrumbsExpect compile-update compile-compile projectDescriptors
> breadcrumbsClear
$ exists a/target/scala-2.10/a_2.10-v1.jar
$ newer timestamp a/target/scala-2.10/a_2.10-v1.jar
$ exists b/target/scala-2.10/b_2.10-v1.jar
$ newer b/target/scala-2.10/b_2.10-v1.jar timestamp
$ exists c/target/scala-2.10/c_2.10-v1.jar
$ newer timestamp c/target/scala-2.10/c_2.10-v1.jar
$ absent d/target/scala-2.10/d_2.10-v1.jar

# making a breaking change in b should nuke itself and downstream jars
> d/packageBin
> b/breakingChange
$ exists a/target/scala-2.10/a_2.10-v1.jar
$ absent b/target/scala-2.10/b_2.10-v1.jar
$ absent c/target/scala-2.10/c_2.10-v1.jar
$ absent d/target/scala-2.10/d_2.10-v1.jar
$ exists a/target/scala-2.10/last/a_2.10-v1.jar
$ exists b/target/scala-2.10/last/b_2.10-v1.jar
$ exists c/target/scala-2.10/last/c_2.10-v1.jar
$ exists d/target/scala-2.10/last/d_2.10-v1.jar
> breadcrumbsClear

# check that runMain will build the packageBin
> d/runMain d.Foo
> a/breadcrumbsExpect
> b/breadcrumbsExpect compile-update compile-compile compile-packageBin projectDescriptors
> c/breadcrumbsExpect compile-update compile-compile compile-packageBin projectDescriptors
> d/breadcrumbsExpect compile-update compile-compile compile-packageBin projectDescriptors
> breadcrumbsClear

# a second invocation of runMain should succeed
> d/runMain d.Foo
> a/breadcrumbsExpect
> b/breadcrumbsExpect
> c/breadcrumbsExpect
> d/breadcrumbsExpect compile-update compile-compile compile-packageBin projectDescriptors
> breadcrumbsClear

# try to weed out any race conditions around the deletion of the jar
> d/runMain d.Foo
> d/runMain d.Foo
> d/runMain d.Foo
> d/runMain d.Foo
> d/runMain d.Foo
> d/runMain d.Foo
> d/runMain d.Foo
> d/runMain d.Foo
> d/runMain d.Foo
> d/runMain d.Foo
> breadcrumbsClear

# Test configurations should always recompile their Compile configuration
> c/test
$ exists c/target/scala-2.10/c_2.10-v1.jar
$ exists c/target/scala-2.10/c_2.10-v1-tests.jar
$ touch timestamp
$ sleep 2000
> a/breadcrumbsExpect
> b/breadcrumbsExpect
> c/breadcrumbsExpect test-packageBin projectDescriptors test-compile compile-update test-update
> d/breadcrumbsExpect
> breadcrumbsClear
# once again, without caches...
> c/test
$ exists c/target/scala-2.10/c_2.10-v1.jar
$ exists c/target/scala-2.10/c_2.10-v1-tests.jar
#$ newer c/target/scala-2.10/c_2.10-v1.jar timestamp
#$ newer c/target/scala-2.10/c_2.10-v1-tests.jar timestamp
> a/breadcrumbsExpect
> b/breadcrumbsExpect
> c/breadcrumbsExpect projectDescriptors test-compile compile-update test-update
> d/breadcrumbsExpect
> breadcrumbsClear

# Eclipse-style test projects should always recompile their main project
> e/test:packageBin
$ exists d/target/scala-2.10/d_2.10-v1.jar
$ exists e/target/scala-2.10/e_2.10-v1.jar
$ exists e/target/scala-2.10/e_2.10-v1-tests.jar
$ sleep 2000
$ touch timestamp
$ sleep 2000
> breadcrumbsClear
> e/test
$ exists a/target/scala-2.10/a_2.10-v1.jar
$ exists b/target/scala-2.10/b_2.10-v1.jar
$ exists c/target/scala-2.10/c_2.10-v1.jar
$ exists d/target/scala-2.10/d_2.10-v1.jar
$ exists e/target/scala-2.10/e_2.10-v1.jar
$ exists e/target/scala-2.10/e_2.10-v1-tests.jar
$ newer timestamp a/target/scala-2.10/a_2.10-v1.jar
$ newer timestamp b/target/scala-2.10/b_2.10-v1.jar
$ newer timestamp d/target/scala-2.10/d_2.10-v1.jar
#$ newer c/target/scala-2.10/c_2.10-v1.jar timestamp
#$ newer e/target/scala-2.10/e_2.10-v1.jar timestamp
#$ newer e/target/scala-2.10/e_2.10-v1-tests.jar timestamp
> a/breadcrumbsExpect
> b/breadcrumbsExpect
> c/breadcrumbsExpect
> d/breadcrumbsExpect
> e/breadcrumbsExpect test-packageBin projectDescriptors test-compile compile-update test-update
$ exists a/target/scala-2.10/last/a_2.10-v1.jar
$ exists b/target/scala-2.10/last/b_2.10-v1.jar
$ exists c/target/scala-2.10/last/c_2.10-v1.jar
$ exists d/target/scala-2.10/last/d_2.10-v1.jar
$ exists e/target/scala-2.10/last/e_2.10-v1.jar
$ exists e/target/scala-2.10/last/e_2.10-v1-tests.jar
> breadcrumbsClear

# scan for breaking changes
> d/packageBin
> breadcrumbsClear
$ exists a/target/scala-2.10/a_2.10-v1.jar
$ exists b/target/scala-2.10/b_2.10-v1.jar
$ exists c/target/scala-2.10/c_2.10-v1.jar
$ exists d/target/scala-2.10/d_2.10-v1.jar
$ exists e/target/scala-2.10/e_2.10-v1.jar
$ exists e/target/scala-2.10/e_2.10-v1-tests.jar
> breakOnChanges
$ exists a/target/scala-2.10/a_2.10-v1.jar
$ exists b/target/scala-2.10/b_2.10-v1.jar
$ exists c/target/scala-2.10/c_2.10-v1.jar
$ exists d/target/scala-2.10/d_2.10-v1.jar
$ exists e/target/scala-2.10/e_2.10-v1.jar
$ exists e/target/scala-2.10/e_2.10-v1-tests.jar
$ sleep 2000
$ touch b/src/main/scala/b/Foo.scala
> breakOnChanges
$ exists a/target/scala-2.10/a_2.10-v1.jar
$ absent b/target/scala-2.10/b_2.10-v1.jar
$ absent c/target/scala-2.10/c_2.10-v1.jar
$ absent d/target/scala-2.10/d_2.10-v1.jar
$ absent e/target/scala-2.10/e_2.10-v1.jar
$ absent e/target/scala-2.10/e_2.10-v1-tests.jar
$ exists a/target/scala-2.10/last/a_2.10-v1.jar
$ exists b/target/scala-2.10/last/b_2.10-v1.jar
$ exists c/target/scala-2.10/last/c_2.10-v1.jar
$ exists d/target/scala-2.10/last/d_2.10-v1.jar
$ exists e/target/scala-2.10/last/e_2.10-v1.jar
$ exists e/target/scala-2.10/last/e_2.10-v1-tests.jar
> breadcrumbsClear
